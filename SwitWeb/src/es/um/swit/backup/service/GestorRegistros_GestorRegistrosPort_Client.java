
package es.um.swit.backup.service;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-08-26T20:49:41.938+02:00
 * Generated source version: 3.2.6
 *
 */
public final class GestorRegistros_GestorRegistrosPort_Client {

    private static final QName SERVICE_NAME = new QName("http://service.backup.swit.um.es/", "GestorRegistrosService");

    private GestorRegistros_GestorRegistrosPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = GestorRegistrosService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        GestorRegistrosService ss = new GestorRegistrosService(wsdlURL, SERVICE_NAME);
        GestorRegistros port = ss.getGestorRegistrosPort();

        {
        System.out.println("Invoking recuperarMappings...");
        java.lang.String _recuperarMappings_idRegistro = "";
        es.um.swit.backup.service.RespuestaRecuperarRegistro _recuperarMappings__return = port.recuperarMappings(_recuperarMappings_idRegistro);
        System.out.println("recuperarMappings.result=" + _recuperarMappings__return);


        }
        {
        System.out.println("Invoking recuperarTodosRegistros...");
        java.util.List<es.um.swit.backup.service.Registro> _recuperarTodosRegistros__return = port.recuperarTodosRegistros();
        System.out.println("recuperarTodosRegistros.result=" + _recuperarTodosRegistros__return);


        }
        {
        System.out.println("Invoking reemplazarMappings...");
        byte[] _reemplazarMappings_mappingsFile = new byte[0];
        java.lang.String _reemplazarMappings_idRegistro = "";
        es.um.swit.backup.service.RespuestaGestorRegistros _reemplazarMappings__return = port.reemplazarMappings(_reemplazarMappings_mappingsFile, _reemplazarMappings_idRegistro);
        System.out.println("reemplazarMappings.result=" + _reemplazarMappings__return);


        }
        {
        System.out.println("Invoking borrarTodosRegistros...");
        boolean _borrarTodosRegistros__return = port.borrarTodosRegistros();
        System.out.println("borrarTodosRegistros.result=" + _borrarTodosRegistros__return);


        }
        {
        System.out.println("Invoking registrarMappings...");
        byte[] _registrarMappings_mappingsFile = new byte[0];
        es.um.swit.backup.service.RespuestaGestorRegistros _registrarMappings__return = port.registrarMappings(_registrarMappings_mappingsFile);
        System.out.println("registrarMappings.result=" + _registrarMappings__return);


        }

        System.exit(0);
    }

}
