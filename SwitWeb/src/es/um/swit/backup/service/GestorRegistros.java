package es.um.swit.backup.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-08-29T19:16:15.839+02:00
 * Generated source version: 3.2.6
 *
 */
@WebService(targetNamespace = "http://service.backup.swit.um.es/", name = "GestorRegistros")
@XmlSeeAlso({ObjectFactory.class})
public interface GestorRegistros {

    @WebMethod
    @RequestWrapper(localName = "recuperarMappings", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RecuperarMappings")
    @ResponseWrapper(localName = "recuperarMappingsResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RecuperarMappingsResponse")
    @WebResult(name = "respuestaRecuperarRegistros", targetNamespace = "")
    public es.um.swit.backup.service.RespuestaRecuperarRegistro recuperarMappings(
        @WebParam(name = "idRegistro", targetNamespace = "")
        java.lang.String idRegistro
    );

    @WebMethod
    @RequestWrapper(localName = "recuperarTodosRegistros", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RecuperarTodosRegistros")
    @ResponseWrapper(localName = "recuperarTodosRegistrosResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RecuperarTodosRegistrosResponse")
    @WebResult(name = "listaRegistros", targetNamespace = "")
    public java.util.List<es.um.swit.backup.service.Registro> recuperarTodosRegistros();

    @WebMethod
    @RequestWrapper(localName = "registrarMappings", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RegistrarMappings")
    @ResponseWrapper(localName = "registrarMappingsResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.RegistrarMappingsResponse")
    @WebResult(name = "respuestaGestorRegistros", targetNamespace = "")
    public es.um.swit.backup.service.RespuestaGestorRegistros registrarMappings(
        @WebParam(name = "mappingsFile", targetNamespace = "")
        byte[] mappingsFile
    );

    @WebMethod
    @RequestWrapper(localName = "borrarRegistro", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.BorrarRegistro")
    @ResponseWrapper(localName = "borrarRegistroResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.BorrarRegistroResponse")
    @WebResult(name = "borrarRegistro", targetNamespace = "")
    public boolean borrarRegistro(
        @WebParam(name = "idRegistro", targetNamespace = "")
        java.lang.String idRegistro
    );

    @WebMethod
    @RequestWrapper(localName = "reemplazarMappings", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.ReemplazarMappings")
    @ResponseWrapper(localName = "reemplazarMappingsResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.ReemplazarMappingsResponse")
    @WebResult(name = "respuestaGestorRegistros", targetNamespace = "")
    public es.um.swit.backup.service.RespuestaGestorRegistros reemplazarMappings(
        @WebParam(name = "mappingsFile", targetNamespace = "")
        byte[] mappingsFile,
        @WebParam(name = "idRegistro", targetNamespace = "")
        java.lang.String idRegistro
    );

    @WebMethod
    @RequestWrapper(localName = "borrarTodosRegistros", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.BorrarTodosRegistros")
    @ResponseWrapper(localName = "borrarTodosRegistrosResponse", targetNamespace = "http://service.backup.swit.um.es/", className = "es.um.swit.backup.service.BorrarTodosRegistrosResponse")
    @WebResult(name = "todosRegistrosBorrados", targetNamespace = "")
    public boolean borrarTodosRegistros();
}
